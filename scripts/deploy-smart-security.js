#!/usr/bin/env node

/**
 * Deploy Smart Security Notification System
 * Sets up the admin notifications table and smart security system
 */

// Load environment variables from .env.local
require('dotenv').config({ path: '.env.local' });

const fs = require('fs');
const path = require('path');

async function deploySmartSecurity() {
  console.log('üõ°Ô∏è  Deploying Smart Security Notification System\n');
  
  // Check environment variables
  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
  const serviceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;
  
  if (!supabaseUrl || !serviceKey) {
    console.log('‚ùå Missing required environment variables:');
    console.log(`   NEXT_PUBLIC_SUPABASE_URL: ${supabaseUrl ? '‚úÖ' : '‚ùå'}`);
    console.log(`   SUPABASE_SERVICE_ROLE_KEY: ${serviceKey ? '‚úÖ' : '‚ùå'}`);
    return;
  }
  
  console.log('üìã Smart Security System Features:');
  console.log('   ‚úÖ Prevents security logging spam');
  console.log('   ‚úÖ Sends notifications once per incident');
  console.log('   ‚úÖ Groups similar security events');
  console.log('   ‚úÖ Admin dashboard integration');
  console.log('   ‚úÖ Configurable cooldown periods');
  console.log('   ‚úÖ Email alerts for critical incidents\n');
  
  console.log('üóÑÔ∏è  Database Setup Required:');
  console.log('   1. Go to your Supabase Dashboard');
  console.log(`   2. Navigate to: ${supabaseUrl.replace('//', '//').replace('.co', '.co/dashboard')}`);
  console.log('   3. Go to SQL Editor');
  console.log('   4. Copy and paste the SQL from: database/admin-notifications-table.sql');
  console.log('   5. Run the SQL script to create the admin_notifications table\n');
  
  console.log('üéØ What This System Does:');
  console.log('   üìä Smart Notifications:');
  console.log('      ‚Ä¢ Groups similar incidents together');
  console.log('      ‚Ä¢ Sends notifications once per cooldown period');
  console.log('      ‚Ä¢ Prevents terminal spam in development');
  console.log('      ‚Ä¢ Maintains security awareness');
  console.log('');
  console.log('   üîî Admin Dashboard:');
  console.log('      ‚Ä¢ Security notifications tab in admin analytics');
  console.log('      ‚Ä¢ Real-time notification updates');
  console.log('      ‚Ä¢ Mark as read functionality');
  console.log('      ‚Ä¢ Severity-based filtering');
  console.log('');
  console.log('   ‚öôÔ∏è  Cooldown Periods:');
  console.log('      ‚Ä¢ Auth failures: 5 minutes');
  console.log('      ‚Ä¢ Suspicious activity: 10 minutes');
  console.log('      ‚Ä¢ Rate limiting: 2 minutes');
  console.log('      ‚Ä¢ Access denied: 5 minutes');
  console.log('      ‚Ä¢ Validation errors: 15 minutes');
  console.log('');
  
  console.log('üîß Environment Settings:');
  console.log('   ‚Ä¢ Development: Security logs disabled by default');
  console.log('   ‚Ä¢ Production: Full security monitoring enabled');
  console.log('   ‚Ä¢ Override: Set ENABLE_SECURITY_LOGS=true to enable in dev');
  console.log('');
  
  console.log('üìß Email Alerts (Optional):');
  console.log('   ‚Ä¢ Set SECURITY_ALERT_EMAIL for critical incident emails');
  console.log('   ‚Ä¢ Set SECURITY_WEBHOOK_URL for external monitoring');
  console.log('   ‚Ä¢ Critical incidents trigger immediate notifications');
  console.log('');
  
  console.log('üöÄ After Setup:');
  console.log('   1. Run the SQL script in Supabase');
  console.log('   2. Restart your development server');
  console.log('   3. Visit /admin/analytics and check the Security tab');
  console.log('   4. Test by triggering a security event (e.g., invalid API call)');
  console.log('   5. Verify notification appears in admin dashboard');
  console.log('');
  
  console.log('üìÅ Files Created:');
  console.log('   ‚úÖ src/lib/smart-security-notifier.ts - Smart notification system');
  console.log('   ‚úÖ src/components/admin/security-notifications.tsx - Admin UI');
  console.log('   ‚úÖ database/admin-notifications-table.sql - Database schema');
  console.log('   ‚úÖ Updated security-utils.ts to use smart notifications');
  console.log('   ‚úÖ Added Security tab to admin analytics');
  console.log('');
  
  console.log('üéâ Benefits:');
  console.log('   ‚Ä¢ No more terminal spam during development');
  console.log('   ‚Ä¢ Security awareness maintained');
  console.log('   ‚Ä¢ Professional admin notifications');
  console.log('   ‚Ä¢ Grouped incident reporting');
  console.log('   ‚Ä¢ Configurable alert thresholds');
}

deploySmartSecurity().catch(console.error);